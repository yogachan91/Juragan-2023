{"version":3,"file":"src_app_tabs_tabs_module_ts.js","mappings":";;;;;;;;;;;;;;;;;;AAAyC;AACc;AAChB;AAEvC,MAAM,MAAM,GAAW;IACrB;QACE,IAAI,EAAE,EAAE;QACR,SAAS,EAAE,gDAAQ;QACnB,QAAQ,EAAE;YACR;gBACE,IAAI,EAAE,MAAM;gBACZ,YAAY,EAAE,GAAG,EAAE,CAAC,6RAA6B,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,cAAc,CAAC;aAC9E;YACD;gBACE,IAAI,EAAE,MAAM;gBACZ,YAAY,EAAE,GAAG,EAAE,CAAC,wMAA6B,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,cAAc,CAAC;aAC9E;YACD;gBACE,IAAI,EAAE,MAAM;gBACZ,YAAY,EAAE,GAAG,EAAE,CAAC,wMAA6B,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,cAAc,CAAC;aAC9E;YACD;gBACE,IAAI,EAAE,MAAM;gBACZ,YAAY,EAAE,GAAG,EAAE,CAAC,6TAA6B,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,cAAc,CAAC;aAC9E;YACD;gBACE,IAAI,EAAE,MAAM;gBACZ,YAAY,EAAE,GAAG,EAAE,CAAC,yJAA6B,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,cAAc,CAAC;aAC9E;YACD;gBACE,IAAI,EAAE,EAAE;gBACR,UAAU,EAAE,YAAY;gBACxB,SAAS,EAAE,MAAM;aAClB;SACF;KACF;IACD,KAAK;IACL,cAAc;IACd,8BAA8B;IAC9B,sBAAsB;IACtB,IAAI;CACL,CAAC;IAKW,qBAAqB,SAArB,qBAAqB;CAAG;AAAxB,qBAAqB;IAHjC,uDAAQ,CAAC;QACR,OAAO,EAAE,CAAC,kEAAqB,CAAC,MAAM,CAAC,CAAC;KACzC,CAAC;GACW,qBAAqB,CAAG;AAAH;;;;;;;;;;;;;;;;;;;;;;;AC9CW;AACJ;AACM;AACF;AAEiB;AAEvB;IAW1B,cAAc,SAAd,cAAc;CAAG;AAAjB,cAAc;IAT1B,uDAAQ,CAAC;QACR,OAAO,EAAE;YACP,uDAAW;YACX,yDAAY;YACZ,uDAAW;YACX,uEAAqB;SACtB;QACD,YAAY,EAAE,CAAC,gDAAQ,CAAC;KACzB,CAAC;GACW,cAAc,CAAG;AAAH;;;;;;;;;;;;;;;;;;;;;;;;AClBe;AACmB;AACc;IAO9D,QAAQ,SAAR,QAAQ;IAInB,YACU,WAAkC,EAChC,cAA8B;QADhC,gBAAW,GAAX,WAAW,CAAuB;QAChC,mBAAc,GAAd,cAAc,CAAgB;QAExC,MAAM,SAAS,GAAG,IAAI,CAAC,WAAW,CAAC,KAAK,EAAE,CAAC;QAE3C,IAAI,CAAC,cAAc,CAAC,YAAY,CAAC,IAAI,CAAC,UAAU,EAAC,SAAS,CAAC,CAAC,SAAS,CAAC,IAAI,CAAC,EAAE;YAC3E,OAAO,CAAC,GAAG,CAAC,SAAS,EAAC,IAAI,CAAC,KAAK,CAAC;YACnC,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,KAAK,CAAC;QAC3B,CAAC,CAAC,CAAC;IAEH,CAAC;CAIF;;YA1BQ,mFAAqB;YADrB,qEAAc;;AAQV,QAAQ;IALpB,wDAAS,CAAC;QACT,QAAQ,EAAE,UAAU;QACpB,iEAA6B;;KAE9B,CAAC;GACW,QAAQ,CAmBpB;AAnBoB","sources":["./src/app/tabs/tabs-routing.module.ts","./src/app/tabs/tabs.module.ts","./src/app/tabs/tabs.page.ts"],"sourcesContent":["import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { TabsPage } from './tabs.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: TabsPage,\n    children: [\n      {\n        path: 'tab1',\n        loadChildren: () => import('../tab1/tab1.module').then(m => m.Tab1PageModule)\n      },\n      {\n        path: 'tab2',\n        loadChildren: () => import('../tab2/tab2.module').then(m => m.Tab2PageModule)\n      },\n      {\n        path: 'tab3',\n        loadChildren: () => import('../tab3/tab3.module').then(m => m.Tab3PageModule)\n      },\n      {\n        path: 'tab4',\n        loadChildren: () => import('../tab4/tab4.module').then(m => m.Tab4PageModule)\n      },\n      {\n        path: 'tab5',\n        loadChildren: () => import('../tab5/tab5.module').then(m => m.Tab5PageModule)\n      },\n      {\n        path: '',\n        redirectTo: '/tabs/tab1',\n        pathMatch: 'full'\n      }\n    ]\n  }\n  // ,{\n  //   path: '',\n  //   redirectTo: '/tabs/tab1',\n  //   pathMatch: 'full'\n  // }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n})\nexport class TabsPageRoutingModule {}\n","import { IonicModule } from '@ionic/angular';\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { TabsPageRoutingModule } from './tabs-routing.module';\n\nimport { TabsPage } from './tabs.page';\n\n@NgModule({\n  imports: [\n    IonicModule,\n    CommonModule,\n    FormsModule,\n    TabsPageRoutingModule\n  ],\n  declarations: [TabsPage]\n})\nexport class TabsPageModule {}\n","import { Component } from '@angular/core';\nimport { DolphinService } from '../services/dolphin.service';\nimport { AuthenticationService } from '../services/authentication.service';\n\n@Component({\n  selector: 'app-tabs',\n  templateUrl: 'tabs.page.html',\n  styleUrls: ['tabs.page.scss']\n})\nexport class TabsPage {\n  infowa:any;\n  outlet_id:any;\n  store_name:any;\n  constructor(\n    private authService: AuthenticationService, \n      private dolphinService: DolphinService, \n  ) {\n    const outlet_id = this.authService.getID();\n\n    this.dolphinService.whatsappinfo(this.store_name,outlet_id).subscribe(data => {\n      console.log('infowa1',data.info2)\n    this.infowa = data.info2;\n  });\n    \n  }\n\n  \n\n}\n"],"names":[],"sourceRoot":"webpack:///","x_google_ignoreList":[]}